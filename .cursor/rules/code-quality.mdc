---
alwaysApply: true
---

# Code Quality Enforcement Rule

The AI agent MUST automatically run quality checks after every code change to ensure consistent code quality and prevent technical debt accumulation.

## Required Commands

Run in this exact order:

1. **Type Checking**: `pnpm typecheck`

**Note**: Linting is currently disabled (commented out)

## When to Run

- After implementing new features
- After modifying existing code
- After refactoring code
- After moving or renaming files
- After any code changes that could introduce type or linting issues

## Error Handling

- Fix TypeScript errors immediately before proceeding
- Do not consider tasks complete until all checks pass
- Document any unfixable errors and create follow-up tasks

## Implementation Guidelines

- Use the `run_terminal_cmd` tool to invoke commands
- Parse output to identify specific errors
- Fix errors systematically, starting with TypeScript errors
- Re-run checks after fixes to ensure they pass
- Update TODO status based on quality check results

## Exception Handling

- Only skip checks if explicitly requested by the user
- Document any skipped checks and the reason
- Always mention when quality checks are being skipped

## Workflow

1. Make code changes
2. Run `pnpm typecheck` - fix errors if any
3. Re-run until checks pass
4. Mark task complete only when all checks pass

## Success Criteria

- TypeScript compilation succeeds (exit code 0)
- All import paths are correct after file moves
- No broken references or missing dependencies

**This rule applies to ALL code changes regardless of scope.**
